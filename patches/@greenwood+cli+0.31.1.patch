diff --git a/node_modules/@greenwood/cli/src/lib/walker-package-ranger.js b/node_modules/@greenwood/cli/src/lib/walker-package-ranger.js
index 58c3d18..1d54399 100644
--- a/node_modules/@greenwood/cli/src/lib/walker-package-ranger.js
+++ b/node_modules/@greenwood/cli/src/lib/walker-package-ranger.js
@@ -2,16 +2,13 @@ import fs from "fs";
 import { isBuiltin } from "node:module";
 
 // priority if from L -> R
-const SUPPORTED_EXPORT_CONDITIONS = ["import", "module-sync", "default"];
+const SUPPORTED_EXPORT_CONDITIONS = ["import", "module-sync", "default", "./web"];
 const IMPORT_MAP_RESOLVED_PREFIX = "/~";
-const importMap = new Map();
+const importMap = {};
 const diagnostics = new Map();
 
 function updateImportMap(key, value, resolvedRoot) {
-  importMap.set(
-    key.replace("./", ""),
-    `${IMPORT_MAP_RESOLVED_PREFIX}${resolvedRoot.replace("file://", "")}${value.replace("./", "")}`,
-  );
+  importMap[key.replace("./", "")] = `${IMPORT_MAP_RESOLVED_PREFIX}${resolvedRoot.replace("file://", "")}${value.replace("./", "")}`;
 }
 
 // wrapper around import.meta.resolve to provide graceful error handling / logging
@@ -83,7 +80,7 @@ function globToRegex(pattern) {
   pattern = pattern.replace(/[.+^${}()|[\]\\]/g, "\\$&");
 
   // Replace glob `*` with regex `[^/]*` (any characters except slashes)
-  pattern = pattern.replace(/\*/g, "[^/]*");
+  pattern = pattern.replace(/\*/g, "[^]*");
 
   // Replace glob `**` with regex `(.*)` (zero or more directories or files)
   // pattern = pattern.replace(/\*\*/g, '(.*)');
@@ -200,7 +197,42 @@ async function walkPackageForExports(dependency, packageJson, resolvedRoot) {
        * 2. module-sync
        * 3. default
        */
-      if (typeof exports[sub] === "object") {
+      if(Array.isArray(exports[sub])) {
+        // console.log('?????????');
+        for (const item of exports[sub]) {
+          // console.log({ item })
+          // TODO if string, just check it in...
+          if(typeof item === 'object') {
+            // console.log('this is a new one....')
+            let matched = false;
+
+            for (const condition of SUPPORTED_EXPORT_CONDITIONS) {
+              if (item[condition]) {
+                matched = true;
+                // console.log('item[condirtion]', item[condition])
+                // console.log({ dependency, exports, sub, condition, resolvedRoot });
+                if (sub.indexOf("*") >= 0) {
+                  // TODO
+                  // await walkExportPatterns(dependency, sub, item[condition], resolvedRoot);
+                } else {
+                  // TODO 
+                  // const suffix = sub === "." ? "" : sub
+                  updateImportMap(dependency, item[condition], resolvedRoot);
+                }
+                break;
+              }
+            }
+  
+            if (!matched) {
+              // ex. https://unpkg.com/browse/matches-selector@1.2.0/package.json
+              diagnostics.set(
+                dependency,
+                `no supported export conditions (\`${SUPPORTED_EXPORT_CONDITIONS.join(", ")}\`) for dependency => \`${dependency}\``,
+              );
+            }
+          }
+        }
+      } else if (typeof exports[sub] === "object") {
         let matched = false;
         
         for (const condition of SUPPORTED_EXPORT_CONDITIONS) {
diff --git a/node_modules/@greenwood/cli/src/plugins/resource/plugin-node-modules.js b/node_modules/@greenwood/cli/src/plugins/resource/plugin-node-modules.js
index b56d1a1..f611de4 100644
--- a/node_modules/@greenwood/cli/src/plugins/resource/plugin-node-modules.js
+++ b/node_modules/@greenwood/cli/src/plugins/resource/plugin-node-modules.js
@@ -97,7 +97,7 @@ class NodeModulesResource extends ResourceInterface {
         console.log("****************************************************************************");
       }
 
-      generatedImportMap = Object.fromEntries(importMap);
+      generatedImportMap = importMap; // Object.fromEntries(importMap);
     } else {
       generatedImportMap = generatedImportMap || {};
     }
